//https://cdn.jsdelivr.net/gh/core-gs/masterstyle-gs@latest/v2-ghl-loader.min.js
//https://cdn.jsdelivr.net/gh/ghlstyle/d-theme@latest/user-d-custom-theme.css


// GHL Loader (stable theme + manual list activator)
// - Fetches user-d-custom-theme.css (template) and injects scoped Blob stylesheet
// - Then promotes the correct <link data-ghl-id="..."> (or global/blank) to rel="stylesheet"

(function () {
  if (window.__GHL_LOADER__) return;
  window.__GHL_LOADER__ = true;

  // --- Defaults (override via data-template on <script>)
  var DEFAULT_TEMPLATE_URL = "https://cdn.jsdelivr.net/gh/ghlstyle/d-theme@latest/user-d-custom-theme.css";

  function currentScript() {
    return document.currentScript || (function () {
      var s = document.getElementsByTagName("script");
      return s[s.length - 1] || null;
    })();
  }
  function getRouteId() {
    var m = location.href.match(/\/v2\/location\/([^\/\?#]+)/);
    return m ? m[1] : null;
  }
  function scopeClass(id) { return "loc-" + id; }

  // Promote a preload <link> to a real stylesheet by creating a dedicated link
  function promotePreload(node) {
    if (!node) return null;
    var href = node.getAttribute("href");
    if (!href) return null;
    if (document.querySelector('link[rel="stylesheet"][href="' + href + '"]')) return null;
    var l = document.createElement("link");
    l.rel = "stylesheet";
    l.href = href;
    document.head.appendChild(l);
    node.setAttribute("data-activated", "true");
    return l;
  }

  function pickManualCss(idOrBlank) {
    // prefer exact match
    var list = document.querySelectorAll('link[data-ghl-id], link[data-ghl-global]');
    var match = null;

    if (idOrBlank && idOrBlank !== "blank") {
      match = Array.prototype.find.call(list, function (n) {
        return n.getAttribute("data-ghl-id") === idOrBlank;
      });
    }
    if (!match) {
      match = Array.prototype.find.call(list, function (n) {
        return n.hasAttribute("data-ghl-global") ||
               n.getAttribute("data-ghl-id") === "blank";
      });
    }
    return match || null;
  }

  // Fetch template CSS and inject as scoped blob stylesheet
  function loadStableTheme(idOrBlank, templateURL) {
    var key = idOrBlank || "blank";
    if (document.querySelector('link[data-user-theme-loaded="' + key + '"]')) return;

    fetch(templateURL, { cache: "no-store", mode: "cors" })
      .then(function (r) {
        if (!r.ok) throw new Error("template fetch " + r.status);
        return r.text();
      })
      .then(function (css) {
        var scoped;
        // Replace both ".__USER__" and standalone "__USER__" safely
        if (key === "blank") {
          scoped = css.replace(/\.?__USER__\b/g, "");
        } else {
          scoped = css.replace(/\.?__USER__\b/g, "." + scopeClass(key));
        }

        var blob = new Blob([scoped], { type: "text/css" });
        var href = URL.createObjectURL(blob);
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = href;
        link.setAttribute("data-user-theme-loaded", key);
        document.head.appendChild(link);

        // Revoke later
        link.addEventListener("load", function () {
          setTimeout(function () {
            try { URL.revokeObjectURL(href); } catch (e) {}
          }, 1500);
        });
      })
      .catch(function (err) {
        // Critical log so you can see if the template is missing/404
        console.warn("[GHL Loader] Stable theme template fetch failed:", err && err.message);
      });
  }

  function applyFor(idOrBlank) {
    // 1) Add digit-safe scope class to <html> for any additional scoping you might have
    if (idOrBlank && idOrBlank !== "blank") {
      document.documentElement.classList.add(scopeClass(idOrBlank));
    }

    // 2) Stable theme (template) => fetch + scope + inject
    var cs = currentScript();
    var templateOverride = cs && cs.getAttribute("data-template");
    var templateURL = templateOverride || DEFAULT_TEMPLATE_URL;
    loadStableTheme(idOrBlank, templateURL);

    // 3) Dynamic per-ID CSS (manual list): promote matching link
    var chosen = pickManualCss(idOrBlank);
    if (chosen) promotePreload(chosen);
  }

  function start() {
    var cs = currentScript();
    var scopeMode = (cs && cs.getAttribute("data-scope")) || "auto"; // "auto" | "blank"

    if (scopeMode === "blank") {
      setTimeout(function () { applyFor("blank"); }, 50);
      return;
    }

    // AUTO: wait for SPA to reveal /v2/location/:id (max 10s)
    var t0 = Date.now();
    var timer = setInterval(function () {
      var id = getRouteId();
      if (id || (Date.now() - t0) > 10000) {
        clearInterval(timer);
        applyFor(id || "blank");
      }
    }, 120);
  }

  if (document.readyState !== "loading") start();
  else document.addEventListener("DOMContentLoaded", start);
})();
