//https://cdn.jsdelivr.net/gh/core-gs/masterstyle-gs@latest/v3-ghl-loader.min.js
//https://cdn.jsdelivr.net/gh/ghlstyle/d-theme@latest/user-d-custom-theme.css


// GHL Loader (strict matching)
// Loads stable theme (user-d-custom-theme.css) + activates dynamic CSS
// ONLY when an exact matching <link data-ghl-id="..."> exists.
// No implicit fallback. "blank" loads only if a blank entry exists.

(function () {
  if (window.__GHL_LOADER__) return;
  window.__GHL_LOADER__ = true;

  var DEFAULT_TEMPLATE_URL = "https://cdn.jsdelivr.net/gh/ghlstyle/d-theme@latest/user-d-custom-theme.css";

  function currentScript() {
    return document.currentScript || (function () {
      var s = document.getElementsByTagName("script");
      return s[s.length - 1] || null;
    })();
  }
  function getRouteId() {
    var m = location.href.match(/\/v2\/location\/([^\/\?#]+)/);
    return m ? m[1] : null;
  }
  function scopeClass(id) { return "loc-" + id; }

  function promotePreload(node) {
    if (!node) return null;
    var href = node.getAttribute("href");
    if (!href) return null;
    if (document.querySelector('link[rel="stylesheet"][href="' + href + '"]')) return null;
    var l = document.createElement("link");
    l.rel = "stylesheet";
    l.href = href;
    document.head.appendChild(l);
    node.setAttribute("data-activated", "true");
    return l;
  }

  // find an EXACT matching entry in the manual list
  function findExactEntry(idOrBlank) {
    return document.querySelector('link[data-ghl-id="' + idOrBlank + '"]');
  }

  function loadStableTheme(idOrBlank, templateURL) {
    var key = idOrBlank || "blank";
    if (document.querySelector('link[data-user-theme-loaded="' + key + '"]')) return;

    fetch(templateURL, { cache: "no-store", mode: "cors" })
      .then(function (r) { if (!r.ok) throw new Error("template fetch " + r.status); return r.text(); })
      .then(function (css) {
        var scoped = (key === "blank")
          ? css.replace(/\.?__USER__\b/g, "")
          : css.replace(/\.?__USER__\b/g, "." + scopeClass(key));

        var blob = new Blob([scoped], { type: "text/css" });
        var href = URL.createObjectURL(blob);
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = href;
        link.setAttribute("data-user-theme-loaded", key);
        document.head.appendChild(link);

        link.addEventListener("load", function () {
          setTimeout(function () { try { URL.revokeObjectURL(href); } catch (e) {} }, 1500);
        });
      })
      .catch(function (err) {
        console.warn("[GHL Loader] stable template fetch failed:", err && err.message);
      });
  }

  function applyFor(idOrBlank) {
    // 0) Must have a matching entry in the manual list; otherwise LOAD NOTHING.
    var entry = findExactEntry(idOrBlank);
    if (!entry) {
      // strict: do nothing if there is no exact match
      return;
    }

    // 1) digit-safe scope class (optional but recommended)
    if (idOrBlank !== "blank") {
      document.documentElement.classList.add(scopeClass(idOrBlank));
    }

    // 2) stable theme (scoped) â€” load now
    var cs = currentScript();
    var templateURL = (cs && cs.getAttribute("data-template")) || DEFAULT_TEMPLATE_URL;
    loadStableTheme(idOrBlank, templateURL);

    // 3) dynamic per-ID CSS (promote the exact entry)
    promotePreload(entry);
  }

  function start() {
    var cs = currentScript();
    var scopeMode = (cs && cs.getAttribute("data-scope")) || "auto"; // "auto" | "blank"

    if (scopeMode === "blank") {
      // strict: only load if a blank entry exists
      setTimeout(function () { applyFor("blank"); }, 50);
      return;
    }

    // AUTO: wait for SPA to reveal /v2/location/:id (max 10s). No fallback if not found.
    var t0 = Date.now();
    var timer = setInterval(function () {
      var id = getRouteId();
      if (id || (Date.now() - t0 > 10000)) {
        clearInterval(timer);
        if (id) applyFor(id); // strict: only if id exists & has an entry
      }
    }, 120);
  }

  if (document.readyState !== "loading") start();
  else document.addEventListener("DOMContentLoaded", start);
})();
